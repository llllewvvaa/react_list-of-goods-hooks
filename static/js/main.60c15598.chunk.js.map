{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","App","useState","NONE","setType","toogleReverse","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MAEF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAO7D,OAAIR,EACKC,EAAaQ,UAGfR,G,SAlCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMe,EAAgB,WAC3B,MAA4BC,mBAAShB,EAASiB,MAA9C,mBAAOb,EAAP,KAAiBc,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBc,EAAnB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYlB,IAAaJ,EAASO,WAEtCgB,QAAS,WACPL,EAAQlB,EAASO,WARrB,iCAcA,wBACEc,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYlB,IAAaJ,EAASY,SAEtCW,QAAS,WACPL,EAAQlB,EAASY,SARrB,4BAcA,wBACES,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAajB,IAEjBkB,QAAS,WACPJ,GAAc,WACZ,OAAQd,MATd,sBAiBGD,IAAaJ,EAASiB,MAAQZ,IAE3B,wBACEgB,KAAK,SACLD,UAAU,mBACVG,QAAS,WACPL,EAAQlB,EAASiB,MACjBE,GAAc,IALlB,sBAcR,6BAEIjB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC5CmB,KAAI,SAACC,GACJ,OACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC7HzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.60c15598.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setType] = useState(SortType.NONE);\n  const [isReversed, toogleReverse] = useState(false);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => {\n            setType(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => {\n            setType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => {\n            toogleReverse(() => {\n              return !isReversed;\n            });\n          }}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortType !== SortType.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger\"\n                onClick={() => {\n                  setType(SortType.NONE);\n                  toogleReverse(false);\n                }}\n              >\n                Reset\n              </button>\n            )\n        }\n      </div>\n\n      <ul>\n        {\n          getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map((good) => {\n              return (\n                <li key={good} data-cy=\"Good\">\n                  {good}\n                </li>\n              );\n            })\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}